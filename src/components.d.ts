/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */

import '@stencil/router';


import {
  MyAddress as MyAddress
} from './components/my-address/my-address';

declare global {
  interface HTMLMyAddressElement extends MyAddress, HTMLElement {
  }
  var HTMLMyAddressElement: {
    prototype: HTMLMyAddressElement;
    new (): HTMLMyAddressElement;
  };
  interface HTMLElementTagNameMap {
    "my-address": HTMLMyAddressElement;
  }
  interface ElementTagNameMap {
    "my-address": HTMLMyAddressElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "my-address": JSXElements.MyAddressAttributes;
    }
  }
  namespace JSXElements {
    export interface MyAddressAttributes extends HTMLAttributes {
      city?: string;
      state?: string;
      street?: string;
    }
  }
}


import {
  HeaderComponent as MyHeader
} from './components/my-header';

declare global {
  interface HTMLMyHeaderElement extends MyHeader, HTMLElement {
  }
  var HTMLMyHeaderElement: {
    prototype: HTMLMyHeaderElement;
    new (): HTMLMyHeaderElement;
  };
  interface HTMLElementTagNameMap {
    "my-header": HTMLMyHeaderElement;
  }
  interface ElementTagNameMap {
    "my-header": HTMLMyHeaderElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "my-header": JSXElements.MyHeaderAttributes;
    }
  }
  namespace JSXElements {
    export interface MyHeaderAttributes extends HTMLAttributes {
      
    }
  }
}


import {
  MyName as MyName
} from './components/my-name/my-name';

declare global {
  interface HTMLMyNameElement extends MyName, HTMLElement {
  }
  var HTMLMyNameElement: {
    prototype: HTMLMyNameElement;
    new (): HTMLMyNameElement;
  };
  interface HTMLElementTagNameMap {
    "my-name": HTMLMyNameElement;
  }
  interface ElementTagNameMap {
    "my-name": HTMLMyNameElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "my-name": JSXElements.MyNameAttributes;
    }
  }
  namespace JSXElements {
    export interface MyNameAttributes extends HTMLAttributes {
      first?: string;
      last?: string;
    }
  }
}


import {
  MyRoutes as MyRoutes
} from './components/my-routes';

declare global {
  interface HTMLMyRoutesElement extends MyRoutes, HTMLElement {
  }
  var HTMLMyRoutesElement: {
    prototype: HTMLMyRoutesElement;
    new (): HTMLMyRoutesElement;
  };
  interface HTMLElementTagNameMap {
    "my-routes": HTMLMyRoutesElement;
  }
  interface ElementTagNameMap {
    "my-routes": HTMLMyRoutesElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "my-routes": JSXElements.MyRoutesAttributes;
    }
  }
  namespace JSXElements {
    export interface MyRoutesAttributes extends HTMLAttributes {
      
    }
  }
}

